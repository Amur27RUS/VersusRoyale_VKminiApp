{"version":3,"sources":["App.js","TestCards.js","panels/TestPanel.js","ImageForTest.js","index.js","img/persik.png","img/spotty.png","img/luna.png","img/puppy.png","img/doctor.png","img/catFish.png","img/hardKot.png","img/horse.png","img/iLameRu.png","img/kurica.png","img/spider.png","img/vanya.png","panels/Home.js"],"names":["global","tests","currentTest","winner","App","useState","activePanel","setActivePanel","fetchedUser","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","go","e","currentTarget","dataset","to","id","cards","className","title","TestCards","map","info","size","mode","onClick","data-to","style","height","osName","platform","TestPanel","props","left","IOS","curTest","imageArr","persik","spotty","luna","puppy","doctor","catFish","hardKot","horse","iLame","kurica","spider","vanya","usageArr","length","i","undefinedElements","counter","num1","getRandomInt","num2","min","max","rand","Math","random","round","console","log","ImageForTest","state","image1","image2","css1","css2","text","changeImg1","undefined","sort","setState","getElementById","onclick","changeImg2","this","src","alt","React","Component","ReactDOM","render","module","exports","Home","before","photo_200","description","city","first_name","last_name"],"mappings":"2OAWAA,EAAOC,MAAQ,CACdC,YAAa,MACbC,OAAQ,MAoCMC,IAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVG,EAFU,KAEGC,EAFH,OAGWJ,mBAAS,MAHpB,mBAGVK,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAMC,EAAK,SAAAC,GACVxB,EAAewB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAM5B,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,IAAD,CAAMyB,GAAG,OAAO3B,YAAaA,EAAasB,GAAIA,IAC9C,kBAAC,IAAD,CAAWK,GAAG,YAAYL,GAAIA,Q,oDC5CjC,2FAMMM,GANN,MAMa,CACT,CAAED,GAAI,EAAGE,UAAW,eAAgBC,MAAO,6EAC3C,CAAEH,GAAI,EAAGE,UAAW,eAAgBC,MAAO,qDAC3C,CAAEH,GAAI,EAAGE,UAAW,eAAgBC,MAAO,mFAC3C,CAAEH,GAAI,EAAGE,UAAW,eAAgBC,MAAO,gGAC3C,CAAEH,GAAI,EAAGE,UAAW,eAAgBC,MAAO,oCAGhC,SAASC,EAAT,GAA0B,IAANT,EAAK,EAALA,GAI/B,OACI,kBAAC,IAAD,CAAOQ,MAAM,aAAaD,UAAW,YACjC,kBAAC,IAAD,KACKD,EAAMI,KAAI,SAAAC,GACP,OAAO,kBAAC,IAAD,CAAMJ,UAAW,QAASK,KAAK,IAAIC,KAAK,SAASC,QAAU,SAACb,GAC/DD,EAAGC,GAPnB/B,EAAOC,MAAMC,YAAc,SASZ2C,UAAQ,aACP,yBAAKC,MAAO,CAAEC,OAAQ,MACtB,uBAAGV,UAAW,cAAeI,EAAKH,gB,oDC3B1D,kJAYMU,EAASC,cAsBAC,IApBG,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOhB,GAAIgB,EAAMhB,IACb,kBAAC,IAAD,CACIiB,KAAM,kBAAC,IAAD,CAAmBR,QAASO,EAAMrB,GAAIe,UAAQ,QAC/CG,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAFjD,4BAQA,kBAAC,IAAD,CAAcC,QAAUtD,EAAOC,MAAMC,kB,mDCN7C,I,oQAFIqD,EAAW,CAACC,IAAQC,IAAQC,IAAMC,IAAOC,IAAQC,IAASC,IAASC,IAAOC,IAAOC,IAAQC,IAAQC,KACjGC,EAAW,CAACb,EAASc,QACjBC,EAAI,EAAGA,EAAIf,EAASc,OAAQC,IAChCF,EAASE,GAAK,EAWlB,IATA,IACIC,EADAC,EAAU,EAKVC,EAAOC,EAAa,EAAGnB,EAASc,OAAO,GACvCM,EAAOD,EAAa,EAAGnB,EAASc,OAAO,GAGrCI,IAASE,GACXA,EAAOD,EAAa,EAAGnB,EAASc,OAAO,GAI3C,SAASK,EAAaE,EAAKC,GAEvB,IAAIC,EAAOF,EAAM,GAAMG,KAAKC,UAAYH,EAAMD,EAAM,GACpD,OAAOG,KAAKE,MAAMH,GAEtBI,QAAQC,IAAI,uB,IAENC,E,kDAEF,WAAYjC,GAAQ,IAAD,8BACf,cAAMA,IAMVkC,MAAQ,CACJC,OAAQ/B,EAASkB,GACjBc,OAAQhC,EAASoB,GACjBa,KAAM,YACNC,KAAM,YACNC,KAAM,MAZS,EAgBnBC,WAAa,WACTT,QAAQC,IAAI,eACZZ,EAAoB,GAEIhB,EAASc,OAAO,UAC7Bd,EAASoB,GAGpB,IAAI,IAAIL,EAAI,EAAGA,EAAEf,EAASc,OAAQC,SACXsB,IAAhBrC,EAASe,IACRC,IAIRhB,EAASsC,OACTX,QAAQC,IAAI,UACZ,IAAI,IAAIb,EAAI,EAAGA,EAAEf,EAASc,OAAQC,IAC9BY,QAAQC,IAAI5B,EAASe,IAGzB,GADAE,IACGD,EAAoBhB,EAASc,OAAO,EAAE,CAGrC,IAFAI,EAAOC,EAAa,EAAGnB,EAASc,OAAOG,GACvCG,EAAOD,EAAa,EAAGnB,EAASc,OAAOG,GAChCC,IAASE,GACZA,EAAOD,EAAa,EAAGnB,EAASc,OAAOG,GAE3C,EAAKsB,SAAS,CACVR,OAAQ/B,EAASkB,GACjBc,OAAQhC,EAASoB,UAGrB,EAAKmB,SAAS,CACVR,OAAQ/B,EAAS,GACjBkC,KAAO,SACPD,KAAM,SACNE,KAAM,kEAEVpE,SAASyE,eAAe,UAAUC,QAAU,KAC5C1E,SAASyE,eAAe,UAAUC,QAAU,KAC5CxB,EAAU,EACVjB,EAAW,CAACC,IAAQC,IAAQC,IAAMC,IAAOC,IAAQC,IAASC,IAASC,IAAOC,IAAOC,IAAQC,IAAQC,KACjGM,EAAOC,EAAa,EAAGnB,EAASc,OAAO,GACvCM,EAAOD,EAAa,EAAGnB,EAASc,OAAO,GACvC,EAAKyB,SAAS,CACVR,OAAQ/B,EAASkB,GACjBc,OAAQhC,EAASoB,MA7DV,EAmEnBsB,WAAa,WACTf,QAAQC,IAAI,eACZZ,EAAoB,GAEIhB,EAASc,OAAO,UAC7Bd,EAASkB,GAGpB,IAAI,IAAIH,EAAI,EAAGA,EAAEf,EAASc,OAAQC,SACXsB,IAAhBrC,EAASe,IACRC,IAIRhB,EAASsC,OACTX,QAAQC,IAAI,UACZ,IAAI,IAAIb,EAAI,EAAGA,EAAEf,EAASc,OAAQC,IAC9BY,QAAQC,IAAI5B,EAASe,IAGzB,GADAE,IACGD,EAAoBhB,EAASc,OAAO,EAAE,CAGrC,IAFAI,EAAOC,EAAa,EAAGnB,EAASc,OAAOG,GACvCG,EAAOD,EAAa,EAAGnB,EAASc,OAAOG,GAChCC,IAASE,GACZA,EAAOD,EAAa,EAAGnB,EAASc,OAAOG,GAE3C,EAAKsB,SAAS,CACVR,OAAQ/B,EAASkB,GACjBc,OAAQhC,EAASoB,UAGrB,EAAKmB,SAAS,CACVP,OAAQhC,EAAS,GACjBiC,KAAO,SACPC,KAAM,SACNC,KAAM,kEAEVpE,SAASyE,eAAe,UAAUC,QAAU,KAC5C1E,SAASyE,eAAe,UAAUC,QAAU,KAC5CxB,EAAU,EACVjB,EAAW,CAACC,IAAQC,IAAQC,IAAMC,IAAOC,IAAQC,IAASC,IAASC,IAAOC,IAAOC,IAAQC,IAAQC,KACjGM,EAAOC,EAAa,EAAGnB,EAASc,OAAO,GACvCM,EAAOD,EAAa,EAAGnB,EAASc,OAAO,GACvC,EAAKyB,SAAS,CACVR,OAAQ/B,EAASkB,GACjBc,OAAQhC,EAASoB,MA9GzBO,QAAQC,IAAI,uBACZD,QAAQC,IAAIV,GACZS,QAAQC,IAAIR,GAJG,E,qDAwHf,OADAO,QAAQC,IAAI,kBAGR,6BACI,yBAAK9C,UAAW,QACZ,0BAAMA,UAAU,cAAc6D,KAAKb,MAAMK,OAE7C,6BACJ,yBAAKvD,GAAI,SAAUE,UAAW6D,KAAKb,MAAMG,KAAMW,IAAKD,KAAKb,MAAMC,OAAQc,IAAI,gBAAgBxD,QAASsD,KAAKP,cAErG,6BACA,6BACJ,yBAAKxD,GAAI,SAAUE,UAAW6D,KAAKb,MAAMI,KAAMU,IAAKD,KAAKb,MAAME,OAAQa,IAAI,gBAAgBxD,QAASsD,KAAKD,mB,GArI1FI,IAAMC,WA6IlBlB,O,saC/KftE,IAAOC,KAAK,gBAEZwF,IAASC,OAAO,kBAAC,IAAD,MAASlF,SAASyE,eAAe,U,yCCVjDU,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,gCCA3C,oHAyCeC,IAhCF,SAAC,GAAD,IAAGxE,EAAH,EAAGA,GAAIL,EAAP,EAAOA,GAAItB,EAAX,EAAWA,YAAX,OACZ,kBAAC,IAAD,CAAO2B,GAAIA,GACV,kBAAC,IAAD,CAAcE,UAAW,SAAzB,mBACC7B,GACD,kBAAC,IAAD,CAAO8B,MAAM,oCACZ,kBAAC,IAAD,CACCsE,OAAQpG,EAAYqG,UAAY,kBAAC,IAAD,CAAQV,IAAK3F,EAAYqG,YAAe,KACxEC,YAAatG,EAAYuG,MAAQvG,EAAYuG,KAAKzE,MAAQ9B,EAAYuG,KAAKzE,MAAQ,IAFpF,UAIK9B,EAAYwG,WAJjB,YAI+BxG,EAAYyG,aAI5C,kBAAC,IAAD,CAAWnF,GAAIA,Q","file":"static/js/main.622791ee.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport TestPanel from './panels/TestPanel';\r\n\r\n//npm start - запуск на локалке\r\n//npm run deploy - запуск на хостинг\r\n\r\nglobal.tests = {\r\n\tcurrentTest: '111',\r\n\twinner: null,\r\n}\r\n\r\nconst App = () => {\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel} popout={popout}>\r\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go}/>\r\n\t\t\t<TestPanel id='TestPanel' go={go} />\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n","import {Card, CardGrid} from \"@vkontakte/vkui\";\r\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\r\nimport React from \"react\";\r\nimport Home from \"./panels/Home\";\r\n\r\n\r\nconst cards =[\r\n    { id: 1, className: 'TestUNLOCKED', title: 'Лучший пубгер'},\r\n    { id: 2, className: 'TestUNLOCKED', title: 'Игра века'},\r\n    { id: 3, className: 'TestUNLOCKED', title: 'Лучший стример'},\r\n    { id: 4, className: 'TestUNLOCKED', title: 'Фильм всех времен'},\r\n    { id: 5, className: 'TestUNLOCKED', title: 'Фигня'},\r\n]\r\n\r\nexport default function TestCards({go}) {\r\n    function test1() {\r\n        global.tests.currentTest = 'test1';\r\n    }\r\n    return(\r\n        <Group title=\"Navigation\" className={\"cardGrid\"}>\r\n            <CardGrid>\r\n                {cards.map(info =>{\r\n                    return <Card className={\"cards\"} size=\"l\" mode=\"shadow\" onClick={ (e) => {\r\n                        go(e);\r\n                        test1();\r\n                    }} data-to=\"TestPanel\">\r\n                        <div style={{ height: 15 }} />\r\n                        <p className={\"titleCards\"}>{info.title}</p>\r\n                    </Card>\r\n                })}\r\n            </CardGrid>\r\n        </Group>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport './main.css';\r\nimport ImageForTest from \"../ImageForTest\";\r\n\r\nconst osName = platform();\r\n\r\nconst TestPanel = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </PanelHeaderButton>}\r\n        >\r\n            Тест\r\n        </PanelHeader>\r\n\r\n        <ImageForTest curTest ={global.tests.currentTest}/>\r\n\r\n    </Panel>\r\n);\r\n\r\nTestPanel.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TestPanel;\r\n","import React from 'react';\r\nimport persik from './img/persik.png';\r\nimport spotty from './img/spotty.png';\r\nimport luna from './img/luna.png';\r\nimport puppy from './img/puppy.png';\r\nimport doctor from './img/doctor.png';\r\nimport catFish from './img/catFish.png';\r\nimport hardKot from './img/hardKot.png';\r\nimport horse from './img/horse.png';\r\nimport iLame from './img/iLameRu.png';\r\nimport kurica from './img/kurica.png';\r\nimport spider from './img/spider.png';\r\nimport vanya from './img/vanya.png';\r\n\r\n\r\n// Массив с картинками\r\nlet imageArr = [persik, spotty, luna, puppy, doctor, catFish, hardKot, horse, iLame, kurica, spider, vanya];\r\nlet usageArr = [imageArr.length];\r\nfor(let i = 0; i < imageArr.length; i++){\r\n    usageArr[i] = 0;\r\n}\r\nlet counter = 1;\r\nlet undefinedElements;\r\n\r\n\r\n// рандомные номера картинок из массива\r\nlet num1 = getRandomInt(0, imageArr.length-1);\r\nlet num2 = getRandomInt(0, imageArr.length-1);\r\n\r\n// Нужно, чтобы картинки были разными\r\nwhile(num1 === num2){\r\n    num2 = getRandomInt(0, imageArr.length-1);\r\n}\r\n\r\n//Функция для получения рандомного числа от 0 до max\r\nfunction getRandomInt(min, max) {\r\n    // получить случайное число от (min-0.5) до (max+0.5)\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    return Math.round(rand);\r\n}\r\nconsole.log('UPPER CLASS STARTED');\r\n\r\nclass ImageForTest extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log('CONSTRUCTOR STARTED');\r\n        console.log(num1);\r\n        console.log(num2);\r\n    }\r\n\r\n    state = {\r\n        image1: imageArr[num1],\r\n        image2: imageArr[num2],\r\n        css1: 'TestImage',\r\n        css2: 'TestImage',\r\n        text: null,\r\n    }\r\n\r\n\r\n    changeImg1 = () => {\r\n        console.log('changeIMG1');\r\n        undefinedElements = 0;\r\n\r\n        if (undefinedElements < imageArr.length-1) {\r\n            delete imageArr[num2];\r\n        }\r\n\r\n        for(let i = 0; i<imageArr.length; i++){\r\n            if(imageArr[i] === undefined){\r\n                undefinedElements++;\r\n            }\r\n        }\r\n\r\n        imageArr.sort();\r\n        console.log('ARRAY:')\r\n        for(let i = 0; i<imageArr.length; i++){\r\n            console.log(imageArr[i])\r\n        }\r\n        counter++;\r\n        if(undefinedElements < imageArr.length-1){\r\n            num1 = getRandomInt(0, imageArr.length-counter);\r\n            num2 = getRandomInt(0, imageArr.length-counter);\r\n            while (num1 === num2){\r\n                num2 = getRandomInt(0, imageArr.length-counter);\r\n            }\r\n            this.setState({\r\n                image1: imageArr[num1],\r\n                image2: imageArr[num2],\r\n            })\r\n        }else{\r\n            this.setState({\r\n                image1: imageArr[0],\r\n                css2:  'looser',\r\n                css1: 'winner',\r\n                text: 'Победитель!'\r\n            })\r\n            document.getElementById('image2').onclick = null;\r\n            document.getElementById('image1').onclick = null;\r\n            counter = 1;\r\n            imageArr = [persik, spotty, luna, puppy, doctor, catFish, hardKot, horse, iLame, kurica, spider, vanya];\r\n            num1 = getRandomInt(0, imageArr.length-1);\r\n            num2 = getRandomInt(0, imageArr.length-1);\r\n            this.setState({\r\n                image1: imageArr[num1],\r\n                image2: imageArr[num2],\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    changeImg2 = () => {\r\n        console.log('changeIMG2');\r\n        undefinedElements = 0;\r\n\r\n        if (undefinedElements < imageArr.length-1) {\r\n            delete imageArr[num1];\r\n        }\r\n\r\n        for(let i = 0; i<imageArr.length; i++){\r\n            if(imageArr[i] === undefined){\r\n                undefinedElements++;\r\n            }\r\n        }\r\n\r\n        imageArr.sort();\r\n        console.log('ARRAY:')\r\n        for(let i = 0; i<imageArr.length; i++){\r\n            console.log(imageArr[i])\r\n        }\r\n        counter++;\r\n        if(undefinedElements < imageArr.length-1){\r\n            num1 = getRandomInt(0, imageArr.length-counter);\r\n            num2 = getRandomInt(0, imageArr.length-counter);\r\n            while (num1 === num2){\r\n                num2 = getRandomInt(0, imageArr.length-counter);\r\n            }\r\n            this.setState({\r\n                image1: imageArr[num1],\r\n                image2: imageArr[num2],\r\n            })\r\n        }else{\r\n            this.setState({\r\n                image2: imageArr[0],\r\n                css1:  'looser',\r\n                css2: 'winner',\r\n                text: 'Победитель!',\r\n            })\r\n            document.getElementById('image2').onclick = null;\r\n            document.getElementById('image1').onclick = null;\r\n            counter = 1;\r\n            imageArr = [persik, spotty, luna, puppy, doctor, catFish, hardKot, horse, iLame, kurica, spider, vanya];\r\n            num1 = getRandomInt(0, imageArr.length-1);\r\n            num2 = getRandomInt(0, imageArr.length-1);\r\n            this.setState({\r\n                image1: imageArr[num1],\r\n                image2: imageArr[num2],\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('RENDER STARTED');\r\n        return(\r\n\r\n            <div>\r\n                <div className={\"sign\"}>\r\n                    <span className=\"sign__word\">{this.state.text}</span>\r\n                </div>\r\n                <div>\r\n            <img id={'image1'} className={this.state.css1} src={this.state.image1} alt=\"Loading error\" onClick={this.changeImg1}/>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n            <img id={'image2'} className={this.state.css2} src={this.state.image2} alt=\"Loading error\" onClick={this.changeImg2}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default ImageForTest;\r\n\r\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","module.exports = __webpack_public_path__ + \"static/media/spotty.b7c1e455.png\";","module.exports = __webpack_public_path__ + \"static/media/luna.481437ac.png\";","module.exports = __webpack_public_path__ + \"static/media/puppy.5c31f816.png\";","module.exports = __webpack_public_path__ + \"static/media/doctor.bdd78b76.png\";","module.exports = __webpack_public_path__ + \"static/media/catFish.43ba69bc.png\";","module.exports = __webpack_public_path__ + \"static/media/hardKot.4611aa8c.png\";","module.exports = __webpack_public_path__ + \"static/media/horse.76f0b3c5.png\";","module.exports = __webpack_public_path__ + \"static/media/iLameRu.cad32669.png\";","module.exports = __webpack_public_path__ + \"static/media/kurica.413cae42.png\";","module.exports = __webpack_public_path__ + \"static/media/spider.278ca842.png\";","module.exports = __webpack_public_path__ + \"static/media/vanya.5dbf56aa.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport TestCards from \"../TestCards\";\r\n\r\nconst Home = ({ id, go, fetchedUser}) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader  className={\"panel\"}> Versus ROYALE </PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n\r\n\t\t<TestCards go={go}/>\r\n\r\n\t</Panel>\r\n);\r\n\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}