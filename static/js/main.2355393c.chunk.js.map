{"version":3,"sources":["App.js","panels/Home.js","TestCards.js","panels/TestPanel.js","ImageForTest.js","img/VSicon.png","index.js","img/persik.png","img/spotty.png","img/iLameRu.png","img/kurica.png","img/spider.png","img/vanya.png","img/luna.png","img/puppy.png","img/doctor.png","img/catFish.png","img/hardKot.png","img/horse.png"],"names":["global","tests","currentTest","currentTestName","winner1","vanya","winner2","spider","winner3","kurica","winner4","iLame","App","useState","activePanel","setActivePanel","fetchedUser","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","go","e","currentTarget","dataset","to","id","Home","className","title","before","photo_200","src","description","city","first_name","last_name","cards","persik","spotty","luna","puppy","doctor","catFish","hardKot","horse","TestCards","map","info","size","mode","onClick","data-to","width","height","osName","platform","TestPanel","props","left","IOS","curTest","undefinedElements","persikIMG","TestImage","spottyIMG","lunaIMG","puppyIMG","doctorIMG","catFishIMG","hardKotIMG","horseIMG","iLameIMG","kuricaIMG","spiderIMG","vanyaIMG","imageArr1","imageArr2","imageArr3","imageArr4","images","slice","imageArr","counter","minUsage","num1","getRandomInt","length","num2","min","max","rand","Math","random","round","image","text","this","useNum","console","log","ImageForTest","i","state","image1","image2","text1","text2","css1","css2","textCss1","textCss2","vsIconCSS","changeImg1Remastered","undefined","sort","setState","changeImg2Remastered","alt","vsIcon","React","Component","module","exports","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2355393c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport iLame from './img/iLameRu.png';\nimport kurica from './img/kurica.png';\nimport spider from './img/spider.png';\nimport vanya from './img/vanya.png';\nimport Home from './panels/Home';\nimport TestPanel from './panels/TestPanel';\n\n//npm start - запуск на локалке\n//npm run deploy - запуск на хостинг\n\nglobal.tests = {\n\tcurrentTest: '111',\n\tcurrentTestName: 'testName',\n\twinner1: vanya,\n\twinner2: spider,\n\twinner3: kurica,\n\twinner4: iLame,\n}\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go}/>\n\t\t\t<TestPanel id='TestPanel' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport TestCards from \"../TestCards\";\n\nconst Home = ({ id, go, fetchedUser}) => (\n\t<Panel id={id}>\n\t\t<PanelHeader  className={\"panel\"}> Versus ROYALE </PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<TestCards go={go}/>\n\n\t</Panel>\n);\n\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import {Card, CardGrid} from \"@vkontakte/vkui\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport React from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport persik from \"./img/persik.png\";\nimport spotty from \"./img/spotty.png\";\nimport luna from \"./img/luna.png\";\nimport puppy from \"./img/puppy.png\";\nimport doctor from \"./img/doctor.png\";\nimport catFish from \"./img/catFish.png\";\nimport hardKot from \"./img/hardKot.png\";\nimport horse from \"./img/horse.png\";\nimport iLame from \"./img/iLameRu.png\";\nimport kurica from \"./img/kurica.png\";\nimport spider from \"./img/spider.png\";\nimport vanya from \"./img/vanya.png\";\n\n// Массивы с картинками\nlet imageArr1 = [persik, spotty, luna, puppy, doctor, catFish, hardKot, horse, iLame, kurica, spider, vanya];\nlet imageArr2 = [persik, spotty]\nlet imageArr3 = [spotty, spotty]\nlet imageArr4 = [persik, persik]\n\nconst cards =[\n    { id: 1, className: 'TestUNLOCKED', title: 'Самый лучший стример'},\n    { id: 2, className: 'TestUNLOCKED', title: 'Лучший мем 2020 года'},\n    { id: 3, className: 'TestUNLOCKED', title: 'Лучшая игра года'},\n    { id: 4, className: 'TestUNLOCKED', title: 'Футболист года'},\n    { id: 5, className: 'TestUNLOCKED', title: 'Лучший стикерпак ВК'},\n]\n\nexport default function TestCards({go}) {\n    return(\n        <Group title=\"Navigation\" className={\"cardGrid\"}>\n            <CardGrid>\n                {cards.map(info =>{\n                    return <div className={'CARD'}><Card className={\"cards\"} size=\"l\" mode=\"shadow\" onClick={ (e) => {\n                        go(e);\n                        global.tests.currentTest = info.id;\n                        global.tests.currentTestName = info.title;\n                    }} data-to=\"TestPanel\">\n                        <div className={'divYourVote'}>\n                        <p className={\"titleCards\"}>{info.title}</p>\n\n                        <p className={\"yourVote\"}>\n                            {\"Ваш выбор:\"}\n                            <br/>\n                        <img src={global.tests.winner1} className={'imgOnCard'} width=\"60\" height=\"60\"/>\n                        </p>\n                        </div>\n                    </Card>\n                    </div>\n                })}\n            </CardGrid>\n        </Group>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nimport './main.css';\nimport ImageForTest from \"../ImageForTest\";\n\nconst osName = platform();\n\nconst TestPanel = props => (\n\n    <Panel id={props.id}>\n        <PanelHeader\n            left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n            </PanelHeaderButton>}\n        >\n            {global.tests.currentTestName}\n        </PanelHeader>\n\n        <ImageForTest curTest ={global.tests.currentTest}/>\n\n    </Panel>\n);\n\nTestPanel.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default TestPanel;\n","import React from 'react';\nimport persik from './img/persik.png';\nimport spotty from './img/spotty.png';\nimport luna from './img/luna.png';\nimport puppy from './img/puppy.png';\nimport doctor from './img/doctor.png';\nimport catFish from './img/catFish.png';\nimport hardKot from './img/hardKot.png';\nimport horse from './img/horse.png';\nimport iLame from './img/iLameRu.png';\nimport kurica from './img/kurica.png';\nimport spider from './img/spider.png';\nimport vanya from './img/vanya.png';\nimport vsIcon from './img/VSicon.png';\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\n\nlet persikIMG = new TestImage(persik, 'Персик');\nlet spottyIMG = new TestImage(spotty, 'Спотти');\nlet lunaIMG = new TestImage(luna, 'Луна');\nlet puppyIMG = new TestImage(puppy, 'Паппи');\nlet doctorIMG = new TestImage(doctor, 'Доктор');\nlet catFishIMG = new TestImage(catFish, 'КотоРыба');\nlet hardKotIMG = new TestImage(hardKot, 'ХардКот');\nlet horseIMG = new TestImage(horse, 'Конь');\nlet iLameIMG = new TestImage(iLame, 'Ламыч');\nlet kuricaIMG = new TestImage(kurica, 'Курица');\nlet spiderIMG = new TestImage(spider, 'Паук');\nlet vanyaIMG = new TestImage(vanya, 'Ваня');\n\n\n\n// Массивы с картинками (Число картинок должно быть равно степени двойки)\nlet imageArr1 = [persikIMG, spottyIMG, lunaIMG, puppyIMG, doctorIMG, catFishIMG, hardKotIMG, horseIMG];\nlet imageArr2 = [persikIMG, spottyIMG, iLameIMG, kuricaIMG];\nlet imageArr3 = [spottyIMG, spiderIMG, iLameIMG, vanyaIMG];\nlet imageArr4 = [persikIMG, persikIMG];\n\n//Массив со всеми массивами с картинками.\nlet images = [imageArr1.slice(), imageArr2.slice(), imageArr3.slice(), imageArr4.slice()];\n\n//Рабочий массив\nlet imageArr = [persikIMG, persikIMG];\n\n//Счётчик кол-ва итераций\nlet counter = 1;\n//Кол-во удалённых элементов\nlet undefinedElements;\n//мин кол-во использований\nlet minUsage = 0;\n\n// рандомные номера картинок из массива\nlet num1 = getRandomInt(0, imageArr.length-1);\nlet num2 = getRandomInt(0, imageArr.length-1);\n\n// Нужно, чтобы картинки были разными\nwhile(num1 === num2){\n    num2 = getRandomInt(0, imageArr.length-1);\n}\n\n//Функция для получения рандомного числа от 0 до max\nfunction getRandomInt(min, max) {\n    // получить случайное число от (min-0.5) до (max+0.5)\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\n    return Math.round(rand);\n}\n\n\nconsole.log('UPPER CLASS STARTED');\n\n//Класс для изображений\nfunction TestImage(image, text){\n        this.image = image; //Картинка\n        this.text = text; //Подпись к картинке\n        this.useNum = 0; //Сколько раз использовали\n}\n\nclass ImageForTest extends React.Component {\n\n    constructor(props) {\n        imageArr = images[global.tests.currentTest - 1];\n        for(let i = 0; i < imageArr.length; i++){\n            imageArr[i].useNum = 0;\n        }\n        undefinedElements = 0;\n        num1 = getRandomInt(0, imageArr.length-1);\n        num2 = getRandomInt(0, imageArr.length-1);\n        while(num1 === num2){\n            num2 = getRandomInt(0, imageArr.length-1);\n        }\n        super(props);\n        console.log('CONSTRUCTOR STARTED');\n        console.log(imageArr);\n    }\n\n    state = {\n        image1: imageArr[num1].image, //верхняя картинка\n        image2: imageArr[num2].image, //нижняя картинка\n        text1: imageArr[num1].text, //название верхней картинки\n        text2: imageArr[num2].text, //название нижней картинки\n        css1: 'TestImage', //класс верхней картинки\n        css2: 'TestImage', //Класс нижней картинки\n        textCss1: 'textForImage1',\n        textCss2: 'textForImage2',//класс названия картинок\n        text: null, //Текст победителя\n        vsIconCSS: 'VSicon', //CSS картинки VS\n    }\n\n\n    changeImg1Remastered = () => {\n        undefinedElements = 0;\n        delete imageArr[num2];\n        //Находим кол-во удалённых элементов\n        for(let i = 0; i < imageArr.length; i++){\n            if(imageArr[i] === undefined){\n                undefinedElements++;\n            }\n        }\n\n        if(undefinedElements < imageArr.length-1){\n            counter++;\n            imageArr[num1].useNum++;\n            imageArr.sort();\n            console.log(imageArr);\n            minUsage = 100;\n            //Находим минимальное кол-во использований\n            for(let i = 0; i < imageArr.length-counter; i++){\n                if(imageArr[i].useNum < minUsage){\n                    minUsage = imageArr[i].useNum;\n                }\n            }\n            console.log('MinUSAGE = ' + minUsage);\n\n            num1 = getRandomInt(0, imageArr.length-counter);\n            while(imageArr[num1].useNum !== minUsage){\n                num1 = getRandomInt(0, imageArr.length-counter);\n            }\n            num2 = getRandomInt(0, imageArr.length-counter);\n            while((imageArr[num2].useNum !== minUsage) || (num1 === num2)){\n                num2 = getRandomInt(0, imageArr.length-counter);\n            }\n\n            this.setState({\n                image1: imageArr[num1].image,\n                image2: imageArr[num2].image,\n                text1: imageArr[num1].text,\n                text2: imageArr[num2].text,\n            });\n\n        }else{\n            global.tests.winner1 = imageArr[num1].image;\n            this.setState({\n                image1: imageArr[num1].image,\n                css2:  'looser',\n                css1: 'winner',\n                text: 'Победитель!',\n                textCss1: 'looser',\n                textCss2: 'looser',\n                vsIconCSS: 'looser',\n            });\n            counter = 1;\n            images = [imageArr1.slice(), imageArr2.slice(), imageArr3.slice(), imageArr4.slice()];\n        }\n    }\n\n    changeImg2Remastered = () => {\n\n        undefinedElements = 0;\n        delete imageArr[num1];\n        //Находим кол-во удалённых элементов\n        for(let i = 0; i < imageArr.length; i++){\n            if(imageArr[i] === undefined){\n                undefinedElements++;\n            }\n        }\n\n        if(undefinedElements < imageArr.length-1){\n            counter++;\n            imageArr[num2].useNum++;\n            imageArr.sort();\n            console.log(imageArr);\n            minUsage = 100;\n            //Находим минимальное кол-во использований\n            for(let i = 0; i < imageArr.length-counter; i++){\n                if(imageArr[i].useNum < minUsage){\n                    minUsage = imageArr[i].useNum;\n                }\n            }\n            console.log('MinUSAGE = ' + minUsage);\n\n            num1 = getRandomInt(0, imageArr.length-counter);\n            while(imageArr[num1].useNum !== minUsage){\n                num1 = getRandomInt(0, imageArr.length-counter);\n            }\n\n            num2 = getRandomInt(0, imageArr.length-counter);\n            while((imageArr[num2].useNum !== minUsage) || (num1 === num2)){\n                num2 = getRandomInt(0, imageArr.length-counter);\n            }\n            console.log('NUMS для следующего:');\n            console.log(num1 + ' ' + num2);\n\n            this.setState({\n                image1: imageArr[num1].image,\n                image2: imageArr[num2].image,\n                text1: imageArr[num1].text,\n                text2: imageArr[num2].text,\n            });\n\n        }else{\n            global.tests.winner1 = imageArr[num2].image;\n            this.setState({\n                image1: imageArr[num2].image,\n                css2:  'looser',\n                css1: 'winner',\n                text: 'Победитель!',\n                textCss1: 'looser',\n                textCss2: 'looser',\n                vsIconCSS: 'looser',\n            });\n            counter = 1;\n            images = [imageArr1.slice(), imageArr2.slice(), imageArr3.slice(), imageArr4.slice()];\n        }\n    }\n\n    render() {\n        return(\n            <Group title=\"test\">\n            <div className={'picDIV'}>\n                <div className={\"sign\"}>\n                    <span className='sign__word'>{this.state.text}</span>\n                </div>\n\n            <img id={'image1'} className={this.state.css1} src={this.state.image1} alt=\"Loading error\" onClick={this.changeImg1Remastered}/>\n                    <p className={this.state.textCss1}>{this.state.text1}</p>\n                    <img className={this.state.vsIconCSS} alt=\"loading error\" src={vsIcon} />\n                    <p className={this.state.textCss2}>{this.state.text2}</p>\n            <img id={'image2'} className={this.state.css2} src={this.state.image2} alt=\"Loading error\" onClick={this.changeImg2Remastered}/>\n\n            </div>\n            </Group>\n        )\n    }\n}\nexport default ImageForTest;","module.exports = __webpack_public_path__ + \"static/media/VSicon.9ac572eb.png\";","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","module.exports = __webpack_public_path__ + \"static/media/spotty.b7c1e455.png\";","module.exports = __webpack_public_path__ + \"static/media/iLameRu.cad32669.png\";","module.exports = __webpack_public_path__ + \"static/media/kurica.413cae42.png\";","module.exports = __webpack_public_path__ + \"static/media/spider.278ca842.png\";","module.exports = __webpack_public_path__ + \"static/media/vanya.5dbf56aa.png\";","module.exports = __webpack_public_path__ + \"static/media/luna.481437ac.png\";","module.exports = __webpack_public_path__ + \"static/media/puppy.5c31f816.png\";","module.exports = __webpack_public_path__ + \"static/media/doctor.bdd78b76.png\";","module.exports = __webpack_public_path__ + \"static/media/catFish.43ba69bc.png\";","module.exports = __webpack_public_path__ + \"static/media/hardKot.4611aa8c.png\";","module.exports = __webpack_public_path__ + \"static/media/horse.76f0b3c5.png\";"],"sourceRoot":""}