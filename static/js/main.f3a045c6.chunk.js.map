{"version":3,"sources":["App.js","panels/Home.js","TestCards.js","panels/TestPanel.js","ImageForTest.js","index.js","../node_modules/typescript/lib sync","img/persik.png","img/spotty.png","img/iLameRu.png","img/kurica.png","img/spider.png","img/vanya.png","img/luna.png","img/puppy.png","img/doctor.png","img/catFish.png","img/hardKot.png","img/horse.png"],"names":["global","tests","currentTest","App","useState","activePanel","setActivePanel","fetchedUser","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","go","e","currentTarget","dataset","to","id","Home","className","title","before","photo_200","src","description","city","first_name","last_name","cards","persik","spotty","luna","puppy","doctor","catFish","hardKot","horse","iLame","kurica","spider","vanya","TestCards","map","info","size","mode","onClick","data-to","style","height","winner1","width","osName","platform","TestPanel","props","left","IOS","curTest","undefinedElements","persikIMG","TestImage","spottyIMG","lunaIMG","puppyIMG","doctorIMG","catFishIMG","hardKotIMG","horseIMG","iLameIMG","kuricaIMG","spiderIMG","vanyaIMG","imageArr1","imageArr2","imageArr3","imageArr4","images","slice","imageArr","counter","minUsage","num1","getRandomInt","length","num2","min","max","rand","Math","random","round","image","text","this","useNum","console","log","ImageForTest","i","state","image1","image2","text1","text2","css1","css2","textCss","changeImg1Remastered","undefined","sort","setState","key","changeImg2Remastered","alt","React","Component","ReactDOM","render","getElementById","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.f3a045c6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport iLame from './img/iLameRu.png';\r\nimport kurica from './img/kurica.png';\r\nimport spider from './img/spider.png';\r\nimport vanya from './img/vanya.png';\r\nimport Home from './panels/Home';\r\nimport TestPanel from './panels/TestPanel';\r\n\r\n//npm start - запуск на локалке\r\n//npm run deploy - запуск на хостинг\r\n\r\nglobal.tests = {\r\n\tcurrentTest: '111'\r\n}\r\n\r\nconst App = () => {\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel} popout={popout}>\r\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go}/>\r\n\t\t\t<TestPanel id='TestPanel' go={go} />\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport TestCards from \"../TestCards\";\r\n\r\nconst Home = ({ id, go, fetchedUser}) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader  className={\"panel\"}> Versus ROYALE </PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n\r\n\t\t<TestCards go={go}/>\r\n\r\n\t</Panel>\r\n);\r\n\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import {Card, CardGrid} from \"@vkontakte/vkui\";\r\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\r\nimport React from \"react\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport persik from \"./img/persik.png\";\r\nimport spotty from \"./img/spotty.png\";\r\nimport luna from \"./img/luna.png\";\r\nimport puppy from \"./img/puppy.png\";\r\nimport doctor from \"./img/doctor.png\";\r\nimport catFish from \"./img/catFish.png\";\r\nimport hardKot from \"./img/hardKot.png\";\r\nimport horse from \"./img/horse.png\";\r\nimport iLame from \"./img/iLameRu.png\";\r\nimport kurica from \"./img/kurica.png\";\r\nimport spider from \"./img/spider.png\";\r\nimport vanya from \"./img/vanya.png\";\r\n\r\n// Массивы с картинками\r\nlet imageArr1 = [persik, spotty, luna, puppy, doctor, catFish, hardKot, horse, iLame, kurica, spider, vanya];\r\nlet imageArr2 = [persik, spotty]\r\nlet imageArr3 = [spotty, spotty]\r\nlet imageArr4 = [persik, persik]\r\n\r\nconst cards =[\r\n    { id: 1, className: 'TestUNLOCKED', title: 'Лучший пубгер'},\r\n    { id: 2, className: 'TestUNLOCKED', title: 'Игра века'},\r\n    { id: 3, className: 'TestUNLOCKED', title: 'Лучший футболист'},\r\n    { id: 4, className: 'TestUNLOCKED', title: 'Лучший фильм'},\r\n    { id: 5, className: 'TestUNLOCKED', title: 'Фигня ужасная'},\r\n]\r\n\r\n// bridge.send(\"VKWebAppStorageSet\", {\r\n//     key: winner1,\r\n//     value:\r\n// })\r\n\r\n\r\nexport default function TestCards({go}) {\r\n    return(\r\n        <Group title=\"Navigation\" className={\"cardGrid\"}>\r\n            <CardGrid>\r\n                {cards.map(info =>{\r\n                    return <Card className={\"cards\"} size=\"l\" mode=\"shadow\" onClick={ (e) => {\r\n                        go(e);\r\n                        global.tests.currentTest = info.id;\r\n                    }} data-to=\"TestPanel\">\r\n                        <div style={{ height: 15 }} />\r\n                        <p className={\"titleCards\"}>{info.title}</p>\r\n                        <p className={\"yourVote\"}> {\"Ваш\"} <br/> {\"выбор:\"}\r\n                        <img src={global.tests.winner1} className={'imgOnCard'} width=\"50\" height=\"50\"/> </p>\r\n                    </Card>\r\n                })}\r\n            </CardGrid>\r\n        </Group>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport './main.css';\r\nimport ImageForTest from \"../ImageForTest\";\r\n\r\nconst osName = platform();\r\n\r\nconst TestPanel = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </PanelHeaderButton>}\r\n        >\r\n            Тест\r\n        </PanelHeader>\r\n\r\n        <ImageForTest curTest ={global.tests.currentTest}/>\r\n\r\n    </Panel>\r\n);\r\n\r\nTestPanel.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TestPanel;\r\n","import React from 'react';\r\nimport persik from './img/persik.png';\r\nimport spotty from './img/spotty.png';\r\nimport luna from './img/luna.png';\r\nimport puppy from './img/puppy.png';\r\nimport doctor from './img/doctor.png';\r\nimport catFish from './img/catFish.png';\r\nimport hardKot from './img/hardKot.png';\r\nimport horse from './img/horse.png';\r\nimport iLame from './img/iLameRu.png';\r\nimport kurica from './img/kurica.png';\r\nimport spider from './img/spider.png';\r\nimport vanya from './img/vanya.png';\r\nimport {escapeLeadingUnderscores} from \"typescript\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nlet persikIMG = new TestImage(persik, 'Персик');\r\nlet spottyIMG = new TestImage(spotty, 'Спотти');\r\nlet lunaIMG = new TestImage(luna, 'Луна');\r\nlet puppyIMG = new TestImage(puppy, 'Паппи');\r\nlet doctorIMG = new TestImage(doctor, 'Доктор')\r\nlet catFishIMG = new TestImage(catFish, 'КотоРыба');\r\nlet hardKotIMG = new TestImage(hardKot, 'ХардКот');\r\nlet horseIMG = new TestImage(horse, 'Конь');\r\nlet iLameIMG = new TestImage(iLame, 'Ламыч');\r\nlet kuricaIMG = new TestImage(kurica, 'Курица');\r\nlet spiderIMG = new TestImage(spider, 'Паук');\r\nlet vanyaIMG = new TestImage(vanya, 'Ваня');\r\n\r\n\r\n\r\n// Массивы с картинками (Число картинок должно быть равно степени двойки)\r\nlet imageArr1 = [persikIMG, spottyIMG, lunaIMG, puppyIMG, doctorIMG, catFishIMG, hardKotIMG, horseIMG];\r\nlet imageArr2 = [persikIMG, spottyIMG, iLameIMG, kuricaIMG]\r\nlet imageArr3 = [spottyIMG, spiderIMG, iLameIMG, vanyaIMG]\r\nlet imageArr4 = [persikIMG, persikIMG]\r\n\r\n//Массив со всеми массивами с картинками.\r\nlet images = [imageArr1.slice(), imageArr2.slice(), imageArr3.slice(), imageArr4.slice()];\r\n\r\n//Рабочий массив\r\nlet imageArr = [persikIMG, persikIMG];\r\n\r\n//Счётчик кол-ва итераций\r\nlet counter = 1;\r\n//Кол-во удалённых элементов\r\nlet undefinedElements;\r\n//мин кол-во использований\r\nlet minUsage = 0;\r\n\r\n// рандомные номера картинок из массива\r\nlet num1 = getRandomInt(0, imageArr.length-1);\r\nlet num2 = getRandomInt(0, imageArr.length-1);\r\n\r\n// Нужно, чтобы картинки были разными\r\nwhile(num1 === num2){\r\n    num2 = getRandomInt(0, imageArr.length-1);\r\n}\r\n\r\n//Функция для получения рандомного числа от 0 до max\r\nfunction getRandomInt(min, max) {\r\n    // получить случайное число от (min-0.5) до (max+0.5)\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    return Math.round(rand);\r\n}\r\n\r\n\r\nconsole.log('UPPER CLASS STARTED');\r\n\r\n//Класс для изображений\r\nfunction TestImage(image, text){\r\n        this.image = image; //Картинка\r\n        this.text = text; //Подпись к картинке\r\n        this.useNum = 0; //Сколько раз использовали\r\n}\r\n\r\nclass ImageForTest extends React.Component {\r\n\r\n    constructor(props) {\r\n        imageArr = images[global.tests.currentTest - 1];\r\n        for(let i = 0; i < imageArr.length; i++){\r\n            imageArr[i].useNum = 0;\r\n        }\r\n        undefinedElements = 0;\r\n        num1 = getRandomInt(0, imageArr.length-1);\r\n        num2 = getRandomInt(0, imageArr.length-1);\r\n        while(num1 === num2){\r\n            num2 = getRandomInt(0, imageArr.length-1);\r\n        }\r\n        super(props);\r\n        console.log('CONSTRUCTOR STARTED');\r\n        console.log(imageArr);\r\n    }\r\n\r\n    state = {\r\n        image1: imageArr[num1].image, //верхняя картинка\r\n        image2: imageArr[num2].image, //нижняя картинка\r\n        text1: imageArr[num1].text, //название верхней картинки\r\n        text2: imageArr[num2].text, //название нижней картинки\r\n        css1: 'TestImage', //класс верхней картинки\r\n        css2: 'TestImage', //Класс нижней картинки\r\n        textCss: 'textForImage', //класс названия картинок\r\n        text: null, //Текст победителя\r\n    }\r\n\r\n    changeImg1Remastered = () => {\r\n        undefinedElements = 0;\r\n        delete imageArr[num2];\r\n        //Находим кол-во удалённых элементов\r\n        for(let i = 0; i < imageArr.length; i++){\r\n            if(imageArr[i] === undefined){\r\n                undefinedElements++;\r\n            }\r\n        }\r\n\r\n        if(undefinedElements < imageArr.length-1){\r\n            counter++;\r\n            imageArr[num1].useNum++;\r\n            imageArr.sort();\r\n            console.log(imageArr);\r\n            minUsage = 100;\r\n            //Находим минимальное кол-во использований\r\n            for(let i = 0; i < imageArr.length-counter; i++){\r\n                if(imageArr[i].useNum < minUsage){\r\n                    minUsage = imageArr[i].useNum;\r\n                }\r\n            }\r\n            console.log('MinUSAGE = ' + minUsage);\r\n\r\n            num1 = getRandomInt(0, imageArr.length-counter);\r\n            while(imageArr[num1].useNum !== minUsage){\r\n                num1 = getRandomInt(0, imageArr.length-counter);\r\n            }\r\n            num2 = getRandomInt(0, imageArr.length-counter);\r\n            while((imageArr[num2].useNum !== minUsage) || (num1 === num2)){\r\n                num2 = getRandomInt(0, imageArr.length-counter);\r\n            }\r\n\r\n            this.setState({\r\n                image1: imageArr[num1].image,\r\n                image2: imageArr[num2].image,\r\n                text1: imageArr[num1].text,\r\n                text2: imageArr[num2].text,\r\n            });\r\n\r\n        }else{\r\n            // global.tests.winner1 = imageArr[num1].image;\r\n            this.setState({\r\n                image1: imageArr[num1].image,\r\n                css2:  'looser',\r\n                css1: 'winner',\r\n                text: 'Победитель!',\r\n                textCss: 'looser',\r\n            });\r\n            if (global.tests.currentTest === '1') {\r\n                bridge.send(\"VKWebAppStorageSet\", {\r\n                    key: \"winner1\",\r\n                    value: imageArr[num1].text\r\n                })\r\n            }\r\n            if (global.tests.currentTest === '2') {\r\n                bridge.send(\"VKWebAppStorageSet\", {\r\n                    key: \"winner2\",\r\n                    value: imageArr[num1].text\r\n                })\r\n            }\r\n            if (global.tests.currentTest === '3') {\r\n                bridge.send(\"VKWebAppStorageSet\", {\r\n                    key: \"winner3\",\r\n                    value: imageArr[num1].text\r\n                })\r\n            }\r\n            if (global.tests.currentTest === '4') {\r\n                bridge.send(\"VKWebAppStorageSet\", {\r\n                    key: \"winner4\",\r\n                    value: imageArr[num1].text\r\n                })\r\n            }\r\n            if (global.tests.currentTest === '5') {\r\n                bridge.send(\"VKWebAppStorageSet\", {\r\n                    key: \"winner5\",\r\n                    value: imageArr[num1].text\r\n                })\r\n            }\r\n            counter = 1;\r\n            images = [imageArr1.slice(), imageArr2.slice(), imageArr3.slice(), imageArr4.slice()];\r\n        }\r\n    }\r\n\r\n    changeImg2Remastered = () => {\r\n\r\n        undefinedElements = 0;\r\n        delete imageArr[num1];\r\n        //Находим кол-во удалённых элементов\r\n        for(let i = 0; i < imageArr.length; i++){\r\n            if(imageArr[i] === undefined){\r\n                undefinedElements++;\r\n            }\r\n        }\r\n\r\n        if(undefinedElements < imageArr.length-1){\r\n            counter++;\r\n            imageArr[num2].useNum++;\r\n            imageArr.sort();\r\n            console.log(imageArr);\r\n            minUsage = 100;\r\n            //Находим минимальное кол-во использований\r\n            for(let i = 0; i < imageArr.length-counter; i++){\r\n                if(imageArr[i].useNum < minUsage){\r\n                    minUsage = imageArr[i].useNum;\r\n                }\r\n            }\r\n            console.log('MinUSAGE = ' + minUsage);\r\n\r\n            num1 = getRandomInt(0, imageArr.length-counter);\r\n            while(imageArr[num1].useNum !== minUsage){\r\n                num1 = getRandomInt(0, imageArr.length-counter);\r\n            }\r\n\r\n            num2 = getRandomInt(0, imageArr.length-counter);\r\n            while((imageArr[num2].useNum !== minUsage) || (num1 === num2)){\r\n                num2 = getRandomInt(0, imageArr.length-counter);\r\n            }\r\n            console.log('NUMS для следующего:');\r\n            console.log(num1 + ' ' + num2);\r\n\r\n            this.setState({\r\n                image1: imageArr[num1].image,\r\n                image2: imageArr[num2].image,\r\n                text1: imageArr[num1].text,\r\n                text2: imageArr[num2].text,\r\n            });\r\n\r\n        }else{\r\n            // global.tests.winner1 = imageArr[num2].image;\r\n            this.setState({\r\n                image1: imageArr[num2].image,\r\n                css2:  'looser',\r\n                css1: 'winner',\r\n                text: 'Победитель!',\r\n                textCss: 'looser',\r\n            });\r\n            if (global.tests.currentTest === '1') {\r\n                bridge.send(\"VKWebAppStorageSet\", {\r\n                    key: \"winner1\",\r\n                    value: imageArr[num2].text\r\n                })\r\n            }\r\n            if (global.tests.currentTest === '2') {\r\n                bridge.send(\"VKWebAppStorageSet\", {\r\n                    key: \"winner2\",\r\n                    value: imageArr[num2].text\r\n                })\r\n            }\r\n            if (global.tests.currentTest === '3') {\r\n                bridge.send(\"VKWebAppStorageSet\", {\r\n                    key: \"winner3\",\r\n                    value: imageArr[num2].text\r\n                })\r\n            }\r\n            if (global.tests.currentTest === '4') {\r\n                bridge.send(\"VKWebAppStorageSet\", {\r\n                    key: \"winner4\",\r\n                    value: imageArr[num2].text\r\n                })\r\n            }\r\n            if (global.tests.currentTest === '5') {\r\n                bridge.send(\"VKWebAppStorageSet\", {\r\n                    key: \"winner5\",\r\n                    value: imageArr[num2].text\r\n                })\r\n            }\r\n            console.log(bridge.send(\"VKWebAppStorageGetKeys\", {\"response\": [\"key\"]}));\r\n            console.log(bridge.send(\"VKWebAppStorageGet\", {\r\n                \"response\": [{\r\n                    \"key\": \"winner1\",\r\n                    \"value\": \"\"\r\n                }]\r\n            }));\r\n            counter = 1;\r\n            images = [imageArr1.slice(), imageArr2.slice(), imageArr3.slice(), imageArr4.slice()];\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className={\"sign\"}>\r\n                    <span className='sign__word'>{this.state.text}</span>\r\n                </div>\r\n                <div>\r\n            <img id={'image1'} className={this.state.css1} src={this.state.image1} alt=\"Loading error\" onClick={this.changeImg1Remastered}/>\r\n                    <p className={this.state.textCss}>{this.state.text1}</p>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <p className={this.state.textCss}>{this.state.text2}</p>\r\n            <img id={'image2'} className={this.state.css2} src={this.state.image2} alt=\"Loading error\" onClick={this.changeImg2Remastered}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ImageForTest;","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 330;","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","module.exports = __webpack_public_path__ + \"static/media/spotty.b7c1e455.png\";","module.exports = __webpack_public_path__ + \"static/media/iLameRu.cad32669.png\";","module.exports = __webpack_public_path__ + \"static/media/kurica.413cae42.png\";","module.exports = __webpack_public_path__ + \"static/media/spider.278ca842.png\";","module.exports = __webpack_public_path__ + \"static/media/vanya.5dbf56aa.png\";","module.exports = __webpack_public_path__ + \"static/media/luna.481437ac.png\";","module.exports = __webpack_public_path__ + \"static/media/puppy.5c31f816.png\";","module.exports = __webpack_public_path__ + \"static/media/doctor.bdd78b76.png\";","module.exports = __webpack_public_path__ + \"static/media/catFish.43ba69bc.png\";","module.exports = __webpack_public_path__ + \"static/media/hardKot.4611aa8c.png\";","module.exports = __webpack_public_path__ + \"static/media/horse.76f0b3c5.png\";"],"sourceRoot":""}