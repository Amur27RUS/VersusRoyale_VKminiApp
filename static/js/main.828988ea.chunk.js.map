{"version":3,"sources":["img/persik.png","img/spotty.png","img/luna.png","img/puppy.png","ImageForTest.js","panels/Home.js","panels/TestPanel.js","App.js","index.js"],"names":["module","exports","undefinedElements","Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","imageArr","persik","spotty","luna","puppy","counter","num1","getRandomInt","length","num2","min","max","rand","Math","random","round","ImageForTest","state","image1","image2","css1","css2","text","changeImg1","i","undefined","sort","setState","document","getElementById","onclick","changeImg2","className","this","alt","React","Component","osName","platform","TestPanel","props","left","IOS","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render"],"mappings":"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","file":"static/js/main.828988ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","module.exports = __webpack_public_path__ + \"static/media/spotty.b7c1e455.png\";","module.exports = __webpack_public_path__ + \"static/media/luna.481437ac.png\";","module.exports = __webpack_public_path__ + \"static/media/puppy.5c31f816.png\";","import React from 'react';\r\nimport persik from './img/persik.png';\r\nimport spotty from './img/spotty.png';\r\nimport luna from './img/luna.png';\r\nimport puppy from './img/puppy.png';\r\n\r\n//Массив с картинками\r\nlet imageArr = [persik, spotty, luna, puppy];\r\nlet counter = 1;\r\nlet undefinedElements;\r\n\r\n//рандомные номера картинок из массива\r\nlet num1 = getRandomInt(0, imageArr.length-1);\r\nlet num2 = getRandomInt(0, imageArr.length-1);\r\n\r\n//Нужно, чтобы картинки были разными\r\nwhile(num1 === num2){\r\n    num2 = getRandomInt(0, imageArr.length-1);\r\n}\r\n\r\n//Функция для получения рандомного числа от 0 до max\r\nfunction getRandomInt(min, max) {\r\n    // получить случайное число от (min-0.5) до (max+0.5)\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    return Math.round(rand);\r\n}\r\n\r\nclass ImageForTest extends React.Component {\r\n\r\n    state = {\r\n        image1: imageArr[num1],\r\n        image2: imageArr[num2],\r\n        css1: 'TestImage',\r\n        css2: 'TestImage',\r\n        text: null,\r\n    }\r\n\r\n    changeImg1 = () => {\r\n        undefinedElements = 0;\r\n\r\n        if (undefinedElements < imageArr.length-1) {\r\n            delete imageArr[num2];\r\n        }\r\n\r\n        for(let i = 0; i<imageArr.length; i++){\r\n            if(imageArr[i] === undefined){\r\n                undefinedElements++;\r\n            }\r\n        }\r\n\r\n        imageArr.sort();\r\n        counter++;\r\n        if(undefinedElements < imageArr.length-1){\r\n            num1 = getRandomInt(0, imageArr.length-counter);\r\n            num2 = getRandomInt(0, imageArr.length-counter);\r\n            while (num1 === num2){\r\n                num2 = getRandomInt(0, imageArr.length-counter);\r\n            }\r\n            this.setState({\r\n                image1: imageArr[num1],\r\n                image2: imageArr[num2],\r\n            })\r\n        }else{\r\n            this.setState({\r\n                image1: imageArr[0],\r\n                css2:  'looser',\r\n                css1: 'winner',\r\n                text: 'Победитель!'\r\n            })\r\n            document.getElementById('image2').onclick = null;\r\n            document.getElementById('image1').onclick = null;\r\n        }\r\n    }\r\n\r\n    changeImg2 = () => {\r\n        undefinedElements = 0;\r\n\r\n        if (undefinedElements < imageArr.length-1) {\r\n            delete imageArr[num1];\r\n        }\r\n\r\n        for(let i = 0; i<imageArr.length; i++){\r\n            if(imageArr[i] === undefined){\r\n                undefinedElements++;\r\n            }\r\n        }\r\n\r\n        imageArr.sort();\r\n        counter++;\r\n        if(undefinedElements < imageArr.length-1){\r\n            num1 = getRandomInt(0, imageArr.length-counter);\r\n            num2 = getRandomInt(0, imageArr.length-counter);\r\n            while (num1 === num2){\r\n                num2 = getRandomInt(0, imageArr.length-counter);\r\n            }\r\n            this.setState({\r\n                image1: imageArr[num1],\r\n                image2: imageArr[num2],\r\n            })\r\n        }else{\r\n            this.setState({\r\n                image1: imageArr[0],\r\n                css1:  'looser',\r\n                css2: 'winner',\r\n                text: 'Победитель!',\r\n            })\r\n            document.getElementById('image2').onclick = null;\r\n            document.getElementById('image1').onclick = null;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n                <div className={\"sign\"}>\r\n                    <span className=\"sign__word\">{this.state.text}</span>\r\n                </div>\r\n                <div>\r\n            <img id={'image1'} className={this.state.css1} src={this.state.image1} alt=\"Loading error\" onClick={this.changeImg1}/>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n            <img id={'image2'} className={this.state.css2} src={this.state.image2} alt=\"Loading error\" onClick={this.changeImg2}/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default ImageForTest;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nconst Home = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Корейские тесты</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n\r\n\t\t<Group title=\"Navigation Example\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\r\n\t\t\t\t\tНачать тест\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport './main.css';\r\nimport ImageForTest from \"../ImageForTest\";\r\n\r\nconst osName = platform();\r\n\r\nconst TestPanel = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </PanelHeaderButton>}\r\n        >\r\n            Тест\r\n        </PanelHeader>\r\n\r\n        <ImageForTest />\r\n\r\n    </Panel>\r\n);\r\n\r\nTestPanel.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TestPanel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport TestPanel from './panels/TestPanel';\r\n\r\n//npm start - запуск на локалке\r\n//npm run deploy - запуск на хостинг\r\n\r\nconst App = () => {\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel} popout={popout}>\r\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t<TestPanel id='persik' go={go} />\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}